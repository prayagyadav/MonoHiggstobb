2023-10-06 12:39:48,821 distributed.scheduler:INFO:State start
2023-10-06 12:39:48,871 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:28167
2023-10-06 12:39:48,874 distributed.scheduler:INFO:  dashboard at:            127.0.0.1:8787
2023-10-06 12:39:49,023 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27631'
2023-10-06 12:39:49,034 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10371'
2023-10-06 12:39:49,042 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30983'
2023-10-06 12:39:49,059 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17675'
2023-10-06 12:39:49,070 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19579'
2023-10-06 12:39:49,089 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24817'
2023-10-06 12:39:49,097 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4751'
2023-10-06 12:39:49,103 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3143'
2023-10-06 12:39:49,111 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30893'
2023-10-06 12:39:49,156 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11299'
2023-10-06 12:39:49,171 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5313'
2023-10-06 12:39:49,187 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2267'
2023-10-06 12:39:49,206 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27597'
2023-10-06 12:39:49,218 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12417'
2023-10-06 12:39:49,229 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12405'
2023-10-06 12:39:49,235 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21105'
2023-10-06 12:39:49,248 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6583'
2023-10-06 12:39:49,260 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18719'
2023-10-06 12:39:49,278 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6127'
2023-10-06 12:39:49,295 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24765'
2023-10-06 12:39:49,303 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9597'
2023-10-06 12:39:49,308 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5933'
2023-10-06 12:39:49,316 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29829'
2023-10-06 12:39:49,389 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12247'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 21335 instead
  warnings.warn(
2023-10-06 12:40:05,894 distributed.scheduler:INFO:State start
2023-10-06 12:40:05,901 distributed.scheduler:INFO:  Scheduler at:      tcp://127.0.0.1:9861
2023-10-06 12:40:05,903 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:21335
2023-10-06 12:40:06,059 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17723'
2023-10-06 12:40:06,076 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26487'
2023-10-06 12:40:06,081 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14021'
2023-10-06 12:40:06,087 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8003'
2023-10-06 12:40:06,101 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22019'
2023-10-06 12:40:06,115 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7641'
2023-10-06 12:40:06,119 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26895'
2023-10-06 12:40:06,122 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30485'
2023-10-06 12:40:06,125 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18973'
2023-10-06 12:40:06,128 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8283'
2023-10-06 12:40:06,137 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27063'
2023-10-06 12:40:06,139 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19915'
2023-10-06 12:40:06,146 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26051'
2023-10-06 12:40:06,150 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19707'
2023-10-06 12:40:06,155 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6365'
2023-10-06 12:40:06,171 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19937'
2023-10-06 12:40:06,183 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:33143'
2023-10-06 12:40:06,192 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19107'
2023-10-06 12:40:06,201 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12537'
2023-10-06 12:40:06,211 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24477'
2023-10-06 12:40:06,220 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9805'
2023-10-06 12:40:06,226 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29049'
2023-10-06 12:40:06,235 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1851'
2023-10-06 12:40:06,238 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30177'
2023-10-06 12:40:06,242 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,242 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,245 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17723'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,246 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,246 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,246 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26487'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,247 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,247 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,247 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14021'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,247 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,247 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,248 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8003'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,249 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,249 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,249 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22019'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,249 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,249 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,250 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7641'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,250 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,250 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,251 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26895'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,251 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,251 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,252 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30485'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,252 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,252 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,252 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18973'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,253 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,253 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,253 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27063'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,254 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,254 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,254 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8283'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,254 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,254 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,255 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19915'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,255 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,255 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,256 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26051'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,256 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,256 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,257 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19707'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,257 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,257 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,257 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6365'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,258 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,258 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,258 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19937'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,259 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,259 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,259 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:33143'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,260 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,260 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,260 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19107'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,260 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,260 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,261 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12537'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,261 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,261 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,262 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24477'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,262 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,262 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,263 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9805'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,263 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,263 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,263 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29049'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,264 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,264 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,264 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1851'. Reason: nanny-instantiate-failed
2023-10-06 12:40:06,265 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,265 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:06,265 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30177'. Reason: nanny-instantiate-failed
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 13345 instead
  warnings.warn(
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 12991 instead
  warnings.warn(
2023-10-06 12:40:06,705 distributed.scheduler:INFO:State start
2023-10-06 12:40:06,713 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:11697
2023-10-06 12:40:06,715 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:13345
2023-10-06 12:40:06,760 distributed.scheduler:INFO:State start
2023-10-06 12:40:06,767 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:10807
2023-10-06 12:40:06,769 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:12991
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 4455 instead
  warnings.warn(
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 29399 instead
  warnings.warn(
2023-10-06 12:40:06,875 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30987'
2023-10-06 12:40:06,883 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10883'
2023-10-06 12:40:06,887 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19413'
2023-10-06 12:40:06,890 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21153'
2023-10-06 12:40:06,898 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3763'
2023-10-06 12:40:06,905 distributed.scheduler:INFO:State start
2023-10-06 12:40:06,909 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18395'
2023-10-06 12:40:06,911 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:16915
2023-10-06 12:40:06,912 distributed.scheduler:INFO:  dashboard at:            127.0.0.1:4455
2023-10-06 12:40:06,914 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23297'
2023-10-06 12:40:06,917 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5917'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 14709 instead
  warnings.warn(
2023-10-06 12:40:06,924 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31175'
2023-10-06 12:40:06,931 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21161'
2023-10-06 12:40:06,935 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19617'
2023-10-06 12:40:06,936 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1449'
2023-10-06 12:40:06,938 distributed.scheduler:INFO:State start
2023-10-06 12:40:06,943 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:24993
2023-10-06 12:40:06,944 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:29399
2023-10-06 12:40:06,946 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8161'
2023-10-06 12:40:06,947 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14797'
2023-10-06 12:40:06,948 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16675'
2023-10-06 12:40:06,949 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2285'
2023-10-06 12:40:06,955 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10581'
2023-10-06 12:40:06,960 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17389'
2023-10-06 12:40:06,968 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21657'
2023-10-06 12:40:06,971 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12459'
2023-10-06 12:40:06,975 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23401'
2023-10-06 12:40:06,985 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26547'
2023-10-06 12:40:06,988 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29179'
2023-10-06 12:40:06,991 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7493'
2023-10-06 12:40:06,995 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32393'
2023-10-06 12:40:06,997 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8117'
2023-10-06 12:40:06,998 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32853'
2023-10-06 12:40:07,002 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6737'
2023-10-06 12:40:07,007 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,009 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32571'
2023-10-06 12:40:07,009 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26343'
2023-10-06 12:40:07,012 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12735'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 15481 instead
  warnings.warn(
2023-10-06 12:40:07,015 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6873'
2023-10-06 12:40:07,017 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7923'
2023-10-06 12:40:07,016 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:29019
2023-10-06 12:40:07,018 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:14709
2023-10-06 12:40:07,018 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30655'
2023-10-06 12:40:07,020 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11363'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 28117 instead
  warnings.warn(
2023-10-06 12:40:07,024 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23197'
2023-10-06 12:40:07,026 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10937'
2023-10-06 12:40:07,029 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28673'
2023-10-06 12:40:07,030 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12263'
2023-10-06 12:40:07,035 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18897'
2023-10-06 12:40:07,035 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16155'
2023-10-06 12:40:07,041 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9617'
2023-10-06 12:40:07,039 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,039 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,043 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30987'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,044 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,044 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,044 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10883'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,045 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,045 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,045 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19413'. Reason: nanny-instantiate-failed
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 9327 instead
  warnings.warn(
2023-10-06 12:40:07,046 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,046 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,046 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21153'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,046 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,046 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,047 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3763'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,047 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,047 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,048 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31953'
2023-10-06 12:40:07,048 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18395'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,048 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 31257 instead
  warnings.warn(
2023-10-06 12:40:07,048 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,049 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23297'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,051 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,051 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,052 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5917'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,052 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,052 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,052 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31175'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,053 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,053 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,053 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8161'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,053 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,053 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,054 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19617'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,054 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,054 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,055 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16675'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,055 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,055 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,056 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10581'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,056 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,056 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,056 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21657'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,057 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,057 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,060 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12459'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,060 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11241'
2023-10-06 12:40:07,060 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,060 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,061 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23401'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,063 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20281'
2023-10-06 12:40:07,061 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,061 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,065 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26547'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,065 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,065 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,066 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7493'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,066 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,066 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,067 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32853'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,067 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,067 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,068 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26343'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,068 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,068 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,069 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7923'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,069 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,069 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,070 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11363'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,070 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,070 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,072 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12263'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,072 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,072 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,073 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16155'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,073 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7941'
2023-10-06 12:40:07,081 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13227'
2023-10-06 12:40:07,085 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21933'
2023-10-06 12:40:07,087 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12253'
2023-10-06 12:40:07,088 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30985'
2023-10-06 12:40:07,090 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18813'
2023-10-06 12:40:07,094 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29753'
2023-10-06 12:40:07,096 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,096 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19801'
2023-10-06 12:40:07,097 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18339'
2023-10-06 12:40:07,102 distributed.scheduler:INFO:  Scheduler at:      tcp://127.0.0.1:9215
2023-10-06 12:40:07,104 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:15481
2023-10-06 12:40:07,107 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20665'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 9453 instead
  warnings.warn(
2023-10-06 12:40:07,107 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28125'
2023-10-06 12:40:07,108 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,111 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24933'
2023-10-06 12:40:07,108 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,111 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6147'
2023-10-06 12:40:07,112 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21161'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,112 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,112 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,113 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1449'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,113 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,114 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23689'
2023-10-06 12:40:07,113 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,114 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14797'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,114 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,114 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,115 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2285'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,115 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26227'
2023-10-06 12:40:07,115 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,115 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,116 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17389'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,116 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,116 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,117 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29179'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,117 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,117 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,117 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,117 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32393'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,118 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29025'
2023-10-06 12:40:07,118 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,118 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,118 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8117'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,119 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15581'
2023-10-06 12:40:07,119 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,119 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,119 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6737'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,119 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,119 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,120 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32571'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,120 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,120 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,121 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12735'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,121 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,121 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,122 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6873'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,122 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,122 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,123 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30655'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,123 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,123 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,123 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23197'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,124 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17351'
2023-10-06 12:40:07,124 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,124 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,124 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10937'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,125 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,125 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,125 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28673'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,125 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,125 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,126 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25043'
2023-10-06 12:40:07,126 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18897'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,126 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,126 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,127 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9617'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,127 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,127 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,128 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31953'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,128 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,128 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,126 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:16725
2023-10-06 12:40:07,129 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11241'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,129 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:28117
2023-10-06 12:40:07,129 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,129 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,129 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20281'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,130 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,130 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,130 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7941'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,131 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,131 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,131 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12253'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,132 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27923'
2023-10-06 12:40:07,132 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,132 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,132 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,133 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,133 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18339'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,134 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20977'
2023-10-06 12:40:07,134 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25747'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 3289 instead
  warnings.warn(
2023-10-06 12:40:07,138 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6525'
2023-10-06 12:40:07,139 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22443'
2023-10-06 12:40:07,142 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:31987
2023-10-06 12:40:07,143 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:31257
2023-10-06 12:40:07,142 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:14043
2023-10-06 12:40:07,144 distributed.scheduler:INFO:  dashboard at:            127.0.0.1:9327
2023-10-06 12:40:07,144 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2937'
2023-10-06 12:40:07,145 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24795'
2023-10-06 12:40:07,147 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17527'
2023-10-06 12:40:07,151 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17405'
2023-10-06 12:40:07,157 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28465'
2023-10-06 12:40:07,157 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8405'
2023-10-06 12:40:07,163 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23099'
2023-10-06 12:40:07,166 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12145'
2023-10-06 12:40:07,168 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31837'
2023-10-06 12:40:07,169 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17975'
2023-10-06 12:40:07,173 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8263'
2023-10-06 12:40:07,176 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23081'
2023-10-06 12:40:07,178 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30885'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 29577 instead
  warnings.warn(
2023-10-06 12:40:07,182 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23621'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 7725 instead
  warnings.warn(
2023-10-06 12:40:07,186 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13885'
2023-10-06 12:40:07,186 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19435'
2023-10-06 12:40:07,189 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17261'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 1513 instead
  warnings.warn(
2023-10-06 12:40:07,189 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12917'
2023-10-06 12:40:07,190 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7241'
2023-10-06 12:40:07,192 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1501'
2023-10-06 12:40:07,193 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17003'
2023-10-06 12:40:07,194 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8329'
2023-10-06 12:40:07,195 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3141'
2023-10-06 12:40:07,197 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,199 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22077'
2023-10-06 12:40:07,199 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7957'
2023-10-06 12:40:07,201 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16695'
2023-10-06 12:40:07,202 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29059'
2023-10-06 12:40:07,205 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18577'
2023-10-06 12:40:07,205 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:17909
2023-10-06 12:40:07,207 distributed.scheduler:INFO:  dashboard at:            127.0.0.1:9453
2023-10-06 12:40:07,210 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8409'
2023-10-06 12:40:07,212 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27693'
2023-10-06 12:40:07,214 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30045'
2023-10-06 12:40:07,217 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13063'
2023-10-06 12:40:07,222 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,222 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22805'
2023-10-06 12:40:07,219 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,219 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,223 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13227'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,223 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,223 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,224 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21933'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,224 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,224 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,225 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30985'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,225 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,225 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,226 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18813'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,226 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9625'
2023-10-06 12:40:07,226 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,226 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,227 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29753'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,227 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,227 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,228 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19801'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,228 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30323'
2023-10-06 12:40:07,228 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,228 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,229 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20665'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,229 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,229 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,229 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24933'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,230 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,230 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,230 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29811'
2023-10-06 12:40:07,230 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23689'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,231 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,231 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,231 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29025'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,231 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,231 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,232 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14973'
2023-10-06 12:40:07,232 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20977'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,231 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:18131
2023-10-06 12:40:07,232 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,233 distributed.scheduler:INFO:  dashboard at:            127.0.0.1:3289
2023-10-06 12:40:07,232 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,233 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6525'. Reason: nanny-instantiate-failed
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 23743 instead
  warnings.warn(
2023-10-06 12:40:07,233 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,233 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,234 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24795'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,234 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,234 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,234 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28465'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,235 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27831'
2023-10-06 12:40:07,235 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,235 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,235 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12145'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,236 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,236 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,236 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31837'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,237 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27067'
2023-10-06 12:40:07,236 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,236 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,234 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,237 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30885'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,234 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,237 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28125'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,237 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,237 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,238 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13885'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,238 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,239 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19175'
2023-10-06 12:40:07,239 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,238 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,239 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,239 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12917'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,239 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6147'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,240 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,240 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,240 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1501'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,240 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,240 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,240 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,240 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,241 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26227'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,241 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7957'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,241 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,241 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,241 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,241 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,242 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8329'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,242 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15581'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,242 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,242 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,243 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16695'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,242 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,242 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,243 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17351'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,243 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,243 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,243 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,244 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3319'
2023-10-06 12:40:07,243 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,244 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27693'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,244 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25043'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,244 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,244 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,245 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25747'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,245 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,245 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,246 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27923'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,246 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,246 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,247 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22443'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,247 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,247 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,248 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2937'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,248 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,248 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,249 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17527'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,250 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26609'
2023-10-06 12:40:07,250 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,250 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,250 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17405'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,251 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,251 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,252 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8405'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,252 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3439'
2023-10-06 12:40:07,252 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,252 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,253 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23099'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,254 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,254 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,254 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8263'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,255 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,255 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,256 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17975'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,256 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,256 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,257 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16713'
2023-10-06 12:40:07,257 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23081'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,257 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,257 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,258 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17261'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,258 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,258 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,259 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3141'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,259 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6081'
2023-10-06 12:40:07,259 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,259 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,260 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22077'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,260 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,260 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,261 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29059'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,261 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,261 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,262 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18577'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,262 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,262 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,263 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22805'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,264 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16875'
2023-10-06 12:40:07,264 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,264 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,264 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29811'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,265 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,266 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,268 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10255'
2023-10-06 12:40:07,271 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27369'
2023-10-06 12:40:07,272 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20645'
2023-10-06 12:40:07,272 distributed.scheduler:INFO:  Scheduler at:      tcp://127.0.0.1:1933
2023-10-06 12:40:07,273 distributed.scheduler:INFO:  dashboard at:            127.0.0.1:7725
2023-10-06 12:40:07,272 distributed.scheduler:INFO:  Scheduler at:      tcp://127.0.0.1:1621
2023-10-06 12:40:07,274 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:29577
2023-10-06 12:40:07,274 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28881'
2023-10-06 12:40:07,275 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18773'
2023-10-06 12:40:07,277 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8011'
2023-10-06 12:40:07,278 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2019'
2023-10-06 12:40:07,279 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,280 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29145'
2023-10-06 12:40:07,282 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17475'
2023-10-06 12:40:07,285 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21677'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 32603 instead
  warnings.warn(
2023-10-06 12:40:07,287 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19257'
2023-10-06 12:40:07,288 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1197'
2023-10-06 12:40:07,292 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29921'
2023-10-06 12:40:07,291 distributed.scheduler:INFO:  Scheduler at:      tcp://127.0.0.1:9701
2023-10-06 12:40:07,293 distributed.scheduler:INFO:  dashboard at:            127.0.0.1:1513
2023-10-06 12:40:07,291 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,291 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,295 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23621'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,296 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29599'
2023-10-06 12:40:07,296 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,296 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,297 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19435'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,297 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,297 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,298 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7241'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,298 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32917'
2023-10-06 12:40:07,298 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9359'
2023-10-06 12:40:07,298 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,298 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,299 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17003'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,300 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,300 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,301 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8409'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,301 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,301 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,302 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30045'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,302 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,302 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,302 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13063'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,303 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,303 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,303 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9625'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,303 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28721'
2023-10-06 12:40:07,304 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,304 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,304 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30323'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,304 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23501'
2023-10-06 12:40:07,305 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22907'
2023-10-06 12:40:07,304 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,304 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,305 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14973'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,305 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,305 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,306 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27831'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,306 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,306 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,307 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27067'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,307 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,307 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,307 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19175'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,308 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,308 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,309 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3319'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,309 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27227'
2023-10-06 12:40:07,309 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13831'
2023-10-06 12:40:07,309 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15253'
2023-10-06 12:40:07,309 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,309 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,310 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26609'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,311 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28151'
2023-10-06 12:40:07,310 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,310 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,311 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3439'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,311 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,311 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,312 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16713'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,312 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,312 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4371'
2023-10-06 12:40:07,312 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,313 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9617'
2023-10-06 12:40:07,313 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6081'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,313 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3093'
2023-10-06 12:40:07,313 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6795'
2023-10-06 12:40:07,313 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,313 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,314 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16875'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,314 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,314 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,315 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27369'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,315 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32677'
2023-10-06 12:40:07,315 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,315 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,315 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28881'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,316 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,316 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,316 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29041'
2023-10-06 12:40:07,316 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2019'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,317 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,317 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,317 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29145'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,317 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,317 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12447'
2023-10-06 12:40:07,318 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,318 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,318 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1197'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,318 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14433'
2023-10-06 12:40:07,319 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20853'
2023-10-06 12:40:07,321 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6175'
2023-10-06 12:40:07,321 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30349'
2023-10-06 12:40:07,323 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16181'
2023-10-06 12:40:07,324 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19805'
2023-10-06 12:40:07,326 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26407'
2023-10-06 12:40:07,327 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21161'
2023-10-06 12:40:07,327 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11891'
2023-10-06 12:40:07,326 distributed.scheduler:INFO:  Scheduler at:      tcp://127.0.0.1:4135
2023-10-06 12:40:07,328 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:23743
2023-10-06 12:40:07,329 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1539'
2023-10-06 12:40:07,329 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26907'
2023-10-06 12:40:07,330 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13471'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 31497 instead
  warnings.warn(
2023-10-06 12:40:07,331 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3971'
2023-10-06 12:40:07,332 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6931'
2023-10-06 12:40:07,333 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17089'
2023-10-06 12:40:07,333 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15215'
2023-10-06 12:40:07,334 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9295'
2023-10-06 12:40:07,336 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10601'
2023-10-06 12:40:07,338 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1459'
2023-10-06 12:40:07,339 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8897'
2023-10-06 12:40:07,339 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8761'
2023-10-06 12:40:07,341 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6483'
2023-10-06 12:40:07,342 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6593'
2023-10-06 12:40:07,342 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12173'
2023-10-06 12:40:07,345 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17817'
2023-10-06 12:40:07,346 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9591'
2023-10-06 12:40:07,345 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,345 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,348 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12523'
2023-10-06 12:40:07,348 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24629'
2023-10-06 12:40:07,348 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10255'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,349 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,349 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,350 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20645'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,350 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31059'
2023-10-06 12:40:07,350 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,350 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,350 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7915'
2023-10-06 12:40:07,351 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18773'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,351 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,351 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,351 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8011'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,352 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11169'
2023-10-06 12:40:07,352 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,352 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,352 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17475'. Reason: nanny-instantiate-failed
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 19109 instead
  warnings.warn(
2023-10-06 12:40:07,353 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31097'
2023-10-06 12:40:07,353 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,353 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,354 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21677'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,354 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18483'
2023-10-06 12:40:07,354 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,354 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,355 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19257'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,355 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23419'
2023-10-06 12:40:07,355 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,355 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,356 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29921'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,356 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,356 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,356 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29599'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,356 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8365'
2023-10-06 12:40:07,357 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,357 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,357 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16849'
2023-10-06 12:40:07,357 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9359'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,358 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,358 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,358 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22907'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,358 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12311'
2023-10-06 12:40:07,358 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,358 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,359 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28151'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,359 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,359 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,360 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3093'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,360 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12885'
2023-10-06 12:40:07,360 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9641'
2023-10-06 12:40:07,360 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,360 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,361 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29041'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,361 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16071'
2023-10-06 12:40:07,361 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,361 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,361 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14433'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,362 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,362 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,362 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6175'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,362 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19367'
2023-10-06 12:40:07,362 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,362 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,363 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16181'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,363 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,363 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,364 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26407'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,364 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,364 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,365 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:33037'
2023-10-06 12:40:07,365 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1539'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,365 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25271'
2023-10-06 12:40:07,365 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,365 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,365 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10847'
2023-10-06 12:40:07,366 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3971'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,366 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,366 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,366 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15215'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,367 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14581'
2023-10-06 12:40:07,367 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,367 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,367 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10601'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,368 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7185'
2023-10-06 12:40:07,368 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,368 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,368 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8897'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,368 distributed.scheduler:INFO:State start
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 5585 instead
  warnings.warn(
2023-10-06 12:40:07,369 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,369 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18991'
2023-10-06 12:40:07,369 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,369 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6483'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,372 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27573'
2023-10-06 12:40:07,372 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9831'
2023-10-06 12:40:07,372 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15207'
2023-10-06 12:40:07,373 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24463'
2023-10-06 12:40:07,374 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22993'
2023-10-06 12:40:07,376 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14331'
2023-10-06 12:40:07,374 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:29167
2023-10-06 12:40:07,376 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:32603
2023-10-06 12:40:07,377 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12297'
2023-10-06 12:40:07,378 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7037'
2023-10-06 12:40:07,378 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5111'
2023-10-06 12:40:07,380 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19423'
2023-10-06 12:40:07,381 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20619'
2023-10-06 12:40:07,383 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7689'
2023-10-06 12:40:07,383 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16969'
2023-10-06 12:40:07,384 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13827'
2023-10-06 12:40:07,383 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19527'
2023-10-06 12:40:07,386 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25259'
2023-10-06 12:40:07,387 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2425'
2023-10-06 12:40:07,388 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12791'
2023-10-06 12:40:07,389 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8851'
2023-10-06 12:40:07,390 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8165'
2023-10-06 12:40:07,391 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24477'
2023-10-06 12:40:07,391 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9029'
2023-10-06 12:40:07,393 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24587'
2023-10-06 12:40:07,390 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,390 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,393 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13903'
2023-10-06 12:40:07,393 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32917'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,394 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,394 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,394 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10183'
2023-10-06 12:40:07,394 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28721'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,395 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,395 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,395 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13831'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,396 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23769'
2023-10-06 12:40:07,396 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,396 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,396 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4371'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,396 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,396 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,397 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30349'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,397 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9825'
2023-10-06 12:40:07,397 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,397 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,398 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26907'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,398 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,398 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,398 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24209'
2023-10-06 12:40:07,399 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6931'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,399 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25829'
2023-10-06 12:40:07,399 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,399 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,399 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9295'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,397 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,400 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,397 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,400 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,400 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1459'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,400 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27227'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,401 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,401 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,401 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,401 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6593'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,401 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,401 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9617'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,402 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,402 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,402 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,402 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9591'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,402 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,402 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32677'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,402 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,402 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,403 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28329'
2023-10-06 12:40:07,403 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,403 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12523'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,403 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,403 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27767'
2023-10-06 12:40:07,403 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12447'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,403 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9291'
2023-10-06 12:40:07,403 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,403 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,403 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,404 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31059'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,403 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,404 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19805'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,404 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,404 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,404 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,405 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31097'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,404 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,405 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21161'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,405 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,405 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,405 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17201'
2023-10-06 12:40:07,405 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22377'
2023-10-06 12:40:07,405 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,406 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23419'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,405 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,406 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13471'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,406 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,406 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,406 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,406 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12311'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,406 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,407 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17089'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,407 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7441'
2023-10-06 12:40:07,407 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,407 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,407 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,407 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16071'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,407 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,407 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8761'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,408 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,408 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,408 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,408 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:33037'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,408 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,408 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12173'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,408 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14567'
2023-10-06 12:40:07,408 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,408 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,409 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,409 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7185'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,409 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,409 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18417'
2023-10-06 12:40:07,409 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17817'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,409 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,409 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,409 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,410 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27573'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,409 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,410 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15643'
2023-10-06 12:40:07,410 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7915'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,410 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,410 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,410 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,411 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22993'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,410 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,411 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18483'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,411 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4523'
2023-10-06 12:40:07,411 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,411 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,411 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,411 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7037'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,411 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,412 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8365'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,412 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11463'
2023-10-06 12:40:07,412 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,412 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,412 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,412 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19423'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,412 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,413 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9641'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,413 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10107'
2023-10-06 12:40:07,413 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,413 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,413 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,413 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25271'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,413 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,414 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13827'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,414 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,414 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,414 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18991'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,415 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,415 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26405'
2023-10-06 12:40:07,415 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,415 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9831'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,415 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27251'
2023-10-06 12:40:07,415 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,415 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,416 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12297'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,416 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,416 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,416 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,417 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20619'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,417 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,417 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,417 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18161'
2023-10-06 12:40:07,418 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7689'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,418 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,418 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,418 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15679'
2023-10-06 12:40:07,418 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2425'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,419 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,419 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,419 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24477'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,420 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13477'
2023-10-06 12:40:07,420 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,420 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32257'
2023-10-06 12:40:07,420 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,420 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13903'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,422 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25289'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 9735 instead
  warnings.warn(
2023-10-06 12:40:07,424 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2439'
2023-10-06 12:40:07,424 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3853'
2023-10-06 12:40:07,425 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15131'
2023-10-06 12:40:07,424 distributed.scheduler:INFO:  Scheduler at:      tcp://127.0.0.1:2447
2023-10-06 12:40:07,426 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:31497
2023-10-06 12:40:07,426 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10821'
2023-10-06 12:40:07,426 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22119'
2023-10-06 12:40:07,427 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9083'
2023-10-06 12:40:07,428 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28695'
2023-10-06 12:40:07,427 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,427 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,430 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23501'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,430 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25811'
2023-10-06 12:40:07,430 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30603'
2023-10-06 12:40:07,430 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,430 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,431 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15253'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,431 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24563'
2023-10-06 12:40:07,431 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8671'
2023-10-06 12:40:07,431 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,431 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,432 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6795'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,432 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,432 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,432 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20853'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,433 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24079'
2023-10-06 12:40:07,433 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,433 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,433 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11891'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,434 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20733'
2023-10-06 12:40:07,434 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,434 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,434 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24629'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,435 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,435 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,435 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11169'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,435 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,435 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31903'
2023-10-06 12:40:07,435 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,435 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,436 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29269'
2023-10-06 12:40:07,436 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16849'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,436 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,436 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,437 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12885'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,437 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,437 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,438 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10847'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,438 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,438 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,439 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15207'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,439 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4663'
2023-10-06 12:40:07,439 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,439 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,440 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5111'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,440 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9153'
2023-10-06 12:40:07,440 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28681'
2023-10-06 12:40:07,440 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,440 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,441 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19527'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,441 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12153'
2023-10-06 12:40:07,441 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,441 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,442 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12791'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,442 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,442 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,443 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9029'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,443 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21277'
2023-10-06 12:40:07,443 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,443 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,443 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9825'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,443 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12909'
2023-10-06 12:40:07,444 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,444 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,444 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17955'
2023-10-06 12:40:07,444 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27767'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,444 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14497'
2023-10-06 12:40:07,445 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,445 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,445 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17201'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,445 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,445 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,446 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18417'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,444 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:17273
2023-10-06 12:40:07,446 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3901'
2023-10-06 12:40:07,446 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:19109
2023-10-06 12:40:07,446 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,446 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,447 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11463'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,447 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13429'
2023-10-06 12:40:07,447 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,447 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,448 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26405'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,448 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14545'
2023-10-06 12:40:07,448 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5147'
2023-10-06 12:40:07,448 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,448 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,448 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18161'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,449 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32935'
2023-10-06 12:40:07,449 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,449 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,449 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32257'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,450 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,450 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,450 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2439'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,450 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3145'
2023-10-06 12:40:07,451 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18485'
2023-10-06 12:40:07,451 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31931'
2023-10-06 12:40:07,452 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21121'
2023-10-06 12:40:07,452 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6507'
2023-10-06 12:40:07,453 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,454 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1747'
2023-10-06 12:40:07,454 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31609'
2023-10-06 12:40:07,454 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26195'
2023-10-06 12:40:07,454 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6719'
2023-10-06 12:40:07,456 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9489'
2023-10-06 12:40:07,457 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1285'
2023-10-06 12:40:07,457 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4991'
2023-10-06 12:40:07,457 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18981'
2023-10-06 12:40:07,458 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28161'
2023-10-06 12:40:07,459 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13059'
2023-10-06 12:40:07,460 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1677'
2023-10-06 12:40:07,459 distributed.scheduler:INFO:  Scheduler at:      tcp://127.0.0.1:5655
2023-10-06 12:40:07,461 distributed.scheduler:INFO:  dashboard at:            127.0.0.1:5585
2023-10-06 12:40:07,462 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9923'
2023-10-06 12:40:07,462 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13343'
2023-10-06 12:40:07,462 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17791'
2023-10-06 12:40:07,464 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7911'
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 2745 instead
  warnings.warn(
2023-10-06 12:40:07,464 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21037'
2023-10-06 12:40:07,466 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18213'
2023-10-06 12:40:07,466 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30897'
2023-10-06 12:40:07,466 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3157'
2023-10-06 12:40:07,467 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24469'
2023-10-06 12:40:07,465 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,465 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,468 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19367'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,469 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8565'
2023-10-06 12:40:07,469 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,469 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,469 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14581'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,470 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,470 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,470 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24463'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,470 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,470 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,471 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14331'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,471 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31175'
2023-10-06 12:40:07,471 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,471 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,472 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16969'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,472 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2137'
2023-10-06 12:40:07,472 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21563'
2023-10-06 12:40:07,472 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,472 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,473 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25259'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,473 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,473 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,473 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18057'
2023-10-06 12:40:07,474 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8165'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,474 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,474 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,474 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10183'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,475 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,475 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,472 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,475 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25829'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,472 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,475 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8851'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,475 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29675'
2023-10-06 12:40:07,475 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,475 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,476 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28329'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,476 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14749'
2023-10-06 12:40:07,476 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,476 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,477 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24587'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,476 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,476 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,477 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7441'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,477 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,477 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,477 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23769'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,477 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,477 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,478 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15643'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,478 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20391'
2023-10-06 12:40:07,478 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,478 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,478 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24209'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,478 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,478 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15765'
2023-10-06 12:40:07,478 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,479 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10107'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,478 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,478 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,479 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9291'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,479 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,479 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,479 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15679'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,479 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,480 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24107'
2023-10-06 12:40:07,479 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,480 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15605'
2023-10-06 12:40:07,480 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22377'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,480 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,480 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,480 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3853'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,480 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,480 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,481 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14567'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,481 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,481 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,481 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9083'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,481 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,481 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,482 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4523'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,481 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,481 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,482 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30603'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,482 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,482 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,482 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27251'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,483 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28423'
2023-10-06 12:40:07,483 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28747'
2023-10-06 12:40:07,482 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,482 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,483 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25831'
2023-10-06 12:40:07,483 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,483 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12153'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,483 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,483 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13477'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,483 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,483 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,484 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,484 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,484 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12909'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,484 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25289'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,484 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,484 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,484 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,484 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,485 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22553'
2023-10-06 12:40:07,485 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3901'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,485 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10821'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,485 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26203'
2023-10-06 12:40:07,485 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,485 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,485 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,485 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,486 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5147'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,486 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28695'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,486 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,486 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,486 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,486 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,487 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31931'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,487 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8671'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,487 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,487 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,487 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,487 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,487 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31609'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,487 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30013'
2023-10-06 12:40:07,487 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20733'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,488 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16801'
2023-10-06 12:40:07,488 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,488 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,488 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9153'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,488 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,488 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29395'
2023-10-06 12:40:07,488 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,489 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4991'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,489 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,489 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3395'
2023-10-06 12:40:07,489 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,489 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21277'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,490 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,490 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10613'
2023-10-06 12:40:07,490 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,490 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32935'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,490 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,490 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,491 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6507'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,491 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25663'
2023-10-06 12:40:07,491 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,491 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,492 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26195'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,492 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,492 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21641'
2023-10-06 12:40:07,492 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,492 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10455'
2023-10-06 12:40:07,493 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28161'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,493 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,493 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,493 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1677'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,494 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,494 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11485'
2023-10-06 12:40:07,494 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,494 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7911'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,495 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9899'
2023-10-06 12:40:07,495 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,495 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,495 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3157'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,497 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7079'
2023-10-06 12:40:07,497 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22283'
2023-10-06 12:40:07,498 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14491'
2023-10-06 12:40:07,495 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,495 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,499 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22119'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,500 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,500 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,500 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6263'
2023-10-06 12:40:07,501 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25811'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,501 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,501 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,502 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24079'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,502 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,502 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23653'
2023-10-06 12:40:07,502 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,502 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18537'
2023-10-06 12:40:07,503 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29269'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,503 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,503 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,504 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28681'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,504 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18663'
2023-10-06 12:40:07,504 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,504 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,505 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17955'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,505 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,505 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,505 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,506 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13429'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,506 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4943'
2023-10-06 12:40:07,506 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,506 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,507 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21121'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,507 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17429'
2023-10-06 12:40:07,508 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,508 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,508 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6719'. Reason: nanny-instantiate-failed
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 27675 instead
  warnings.warn(
2023-10-06 12:40:07,508 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29007'
2023-10-06 12:40:07,509 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,509 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,510 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1285'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,510 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29931'
2023-10-06 12:40:07,510 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,511 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9189'
2023-10-06 12:40:07,510 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,511 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9923'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,511 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,511 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,512 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21037'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,513 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32927'
2023-10-06 12:40:07,513 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31319'
2023-10-06 12:40:07,512 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,512 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:29517
2023-10-06 12:40:07,512 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,513 distributed.scheduler:INFO:  dashboard at:            127.0.0.1:9735
2023-10-06 12:40:07,513 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9353'
2023-10-06 12:40:07,513 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24469'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,514 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,514 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,514 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8565'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,515 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17957'
2023-10-06 12:40:07,515 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,515 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,516 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31175'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,516 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11547'
2023-10-06 12:40:07,516 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30703'
2023-10-06 12:40:07,516 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,516 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,517 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18057'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,517 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,517 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,518 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29675'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,518 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,518 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,519 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20391'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,519 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25309'
2023-10-06 12:40:07,519 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18015'
2023-10-06 12:40:07,519 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,519 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,519 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15605'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,520 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17573'
2023-10-06 12:40:07,520 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,520 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,520 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28747'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,521 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,521 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,521 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22553'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,521 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,521 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,522 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16801'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,522 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6637'
2023-10-06 12:40:07,522 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,522 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,523 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10613'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,523 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5025'
2023-10-06 12:40:07,523 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3587'
2023-10-06 12:40:07,523 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,523 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,524 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21641'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,525 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26461'
2023-10-06 12:40:07,526 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32027'
2023-10-06 12:40:07,526 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20867'
2023-10-06 12:40:07,528 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18931'
2023-10-06 12:40:07,529 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20469'
2023-10-06 12:40:07,530 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23765'
2023-10-06 12:40:07,532 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13621'
2023-10-06 12:40:07,528 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,528 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,533 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15131'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,532 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31117'
2023-10-06 12:40:07,533 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,533 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,534 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24563'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,535 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,535 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,535 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16155'
2023-10-06 12:40:07,536 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31903'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,536 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,536 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,534 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,537 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4663'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,534 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,537 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3145'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,538 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15349'
2023-10-06 12:40:07,537 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,538 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,537 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,538 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,538 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9489'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,538 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14497'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,539 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,539 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23463'
2023-10-06 12:40:07,539 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,539 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17791'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,539 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,539 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,540 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14545'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,540 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,540 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,540 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18213'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,540 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,540 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,541 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18485'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,540 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,540 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,541 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21563'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,541 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,541 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21043'
2023-10-06 12:40:07,541 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,541 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,541 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,542 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1747'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,542 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14749'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,542 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28579'
2023-10-06 12:40:07,542 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,542 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,542 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,542 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,543 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24107'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,543 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18981'. Reason: nanny-instantiate-failed
/usr/local/lib/python3.10/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.
Perhaps you already have a cluster running?
Hosting the HTTP server on port 18105 instead
  warnings.warn(
2023-10-06 12:40:07,543 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,543 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,543 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,543 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,544 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28423'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,544 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13059'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,544 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,544 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,544 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,544 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26203'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,544 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,545 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13343'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,545 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,545 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,545 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29395'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,545 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,545 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,546 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30897'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,545 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,545 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,546 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25663'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,546 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,546 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,546 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,546 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,547 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2137'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,547 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9899'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,547 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,547 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,547 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,547 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,548 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15765'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,548 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22283'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,548 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9757'
2023-10-06 12:40:07,548 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7405'
2023-10-06 12:40:07,548 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,548 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,548 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,548 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,549 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6263'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,549 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25831'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,549 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,549 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,550 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18663'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,549 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,549 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,550 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30013'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,550 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,550 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,550 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4943'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,550 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,550 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,551 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,551 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10455'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,551 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,551 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29931'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,551 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9599'
2023-10-06 12:40:07,551 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,551 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,551 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,551 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,552 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7079'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,552 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31319'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,552 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,552 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,552 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,552 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,553 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17957'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,553 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18537'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,553 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,553 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,553 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22689'
2023-10-06 12:40:07,553 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,554 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25309'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,553 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,554 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29007'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,554 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17881'
2023-10-06 12:40:07,554 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,554 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,555 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6637'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,554 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,554 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,555 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32927'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,555 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,555 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,555 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26461'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,555 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,555 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,556 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30703'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,556 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,556 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,556 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18931'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,556 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,556 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,557 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17573'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,557 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,557 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,557 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16475'
2023-10-06 12:40:07,557 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,557 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23765'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,557 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,558 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5025'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,558 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16145'
2023-10-06 12:40:07,560 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9639'
2023-10-06 12:40:07,562 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7383'
2023-10-06 12:40:07,564 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32985'
2023-10-06 12:40:07,567 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22339'
2023-10-06 12:40:07,567 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5525'
2023-10-06 12:40:07,570 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6183'
2023-10-06 12:40:07,571 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22315'
2023-10-06 12:40:07,573 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20597'
2023-10-06 12:40:07,574 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31163'
2023-10-06 12:40:07,576 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23717'
2023-10-06 12:40:07,578 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24431'
2023-10-06 12:40:07,580 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26297'
2023-10-06 12:40:07,583 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4431'
2023-10-06 12:40:07,585 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4595'
2023-10-06 12:40:07,587 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25303'
2023-10-06 12:40:07,582 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,582 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,588 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3395'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,589 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,589 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,590 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11485'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,591 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,590 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,590 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,592 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14491'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,592 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5527'
2023-10-06 12:40:07,592 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21569'
2023-10-06 12:40:07,592 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,592 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,593 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23653'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,594 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,594 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,595 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17429'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,595 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,595 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,596 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9189'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,596 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31631'
2023-10-06 12:40:07,597 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18845'
2023-10-06 12:40:07,597 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,597 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,598 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9353'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,598 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,599 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,599 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,600 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11547'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,600 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,600 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,601 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18015'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,601 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24881'
2023-10-06 12:40:07,601 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,601 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,602 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3587'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,603 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21399'
2023-10-06 12:40:07,603 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,603 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,603 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20867'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,604 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,604 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,602 distributed.scheduler:INFO:  Scheduler at:      tcp://127.0.0.1:5427
2023-10-06 12:40:07,605 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20469'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,605 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:27675
2023-10-06 12:40:07,605 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,605 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,606 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21315'
2023-10-06 12:40:07,606 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13621'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,606 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7513'
2023-10-06 12:40:07,606 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,606 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,607 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16155'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,608 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,608 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,608 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23463'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,609 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13881'
2023-10-06 12:40:07,609 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,609 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,610 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28579'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,610 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28011'
2023-10-06 12:40:07,609 distributed.scheduler:INFO:  Scheduler at:      tcp://127.0.0.1:5097
2023-10-06 12:40:07,610 distributed.scheduler:INFO:  dashboard at:            127.0.0.1:2745
2023-10-06 12:40:07,610 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,610 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,611 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1147'
2023-10-06 12:40:07,611 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7405'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,611 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,611 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,612 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22689'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,612 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17723'
2023-10-06 12:40:07,613 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,613 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,613 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16145'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,614 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,614 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,615 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7383'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,615 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12569'
2023-10-06 12:40:07,615 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8069'
2023-10-06 12:40:07,615 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,615 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,616 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3181'
2023-10-06 12:40:07,616 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22339'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,616 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,616 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,617 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22315'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,618 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,618 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,618 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2987'
2023-10-06 12:40:07,618 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31163'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,619 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10819'
2023-10-06 12:40:07,619 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,619 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,620 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24431'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,620 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23397'
2023-10-06 12:40:07,622 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29411'
2023-10-06 12:40:07,622 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25415'
2023-10-06 12:40:07,623 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22433'
2023-10-06 12:40:07,626 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8639'
2023-10-06 12:40:07,627 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17665'
2023-10-06 12:40:07,628 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16861'
2023-10-06 12:40:07,628 distributed.scheduler:INFO:State start
2023-10-06 12:40:07,629 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14987'
2023-10-06 12:40:07,631 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8043'
2023-10-06 12:40:07,633 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14167'
2023-10-06 12:40:07,628 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,628 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,635 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32027'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,635 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28897'
2023-10-06 12:40:07,635 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23119'
2023-10-06 12:40:07,636 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,636 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,637 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31117'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,638 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16741'
2023-10-06 12:40:07,638 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,638 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,639 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5595'
2023-10-06 12:40:07,639 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15349'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,640 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,640 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,641 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32957'
2023-10-06 12:40:07,641 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21043'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,638 distributed.scheduler:INFO:  Scheduler at:     tcp://127.0.0.1:17001
2023-10-06 12:40:07,642 distributed.scheduler:INFO:  dashboard at:           127.0.0.1:18105
2023-10-06 12:40:07,642 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,642 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,644 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9757'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,644 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14187'
2023-10-06 12:40:07,644 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22111'
2023-10-06 12:40:07,644 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,644 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,645 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9599'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,646 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,646 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,646 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9917'
2023-10-06 12:40:07,647 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13711'
2023-10-06 12:40:07,647 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17881'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,647 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,647 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,648 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16475'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,649 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20823'
2023-10-06 12:40:07,649 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,649 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,649 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16277'
2023-10-06 12:40:07,650 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9639'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,650 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28009'
2023-10-06 12:40:07,650 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,650 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,651 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32985'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,652 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,652 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,653 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17457'
2023-10-06 12:40:07,653 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5525'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,654 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20089'
2023-10-06 12:40:07,654 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,654 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,655 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6183'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,655 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13855'
2023-10-06 12:40:07,655 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,655 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,656 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20597'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,657 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32847'
2023-10-06 12:40:07,657 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,657 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,658 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23717'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,658 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2717'
2023-10-06 12:40:07,658 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,658 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,658 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18019'
2023-10-06 12:40:07,659 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26297'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,659 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24351'
2023-10-06 12:40:07,659 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,659 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,660 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4595'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,660 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,660 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,661 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5527'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,661 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23657'
2023-10-06 12:40:07,662 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,662 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6475'
2023-10-06 12:40:07,662 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,662 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31631'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,663 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,663 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,664 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24881'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,664 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6985'
2023-10-06 12:40:07,664 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11421'
2023-10-06 12:40:07,664 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,664 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,665 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7513'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,665 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19721'
2023-10-06 12:40:07,665 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8243'
2023-10-06 12:40:07,665 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,665 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,666 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1147'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,667 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12567'
2023-10-06 12:40:07,667 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,667 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,667 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8069'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,668 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1959'
2023-10-06 12:40:07,668 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,668 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,668 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19161'
2023-10-06 12:40:07,669 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10819'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,669 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24189'
2023-10-06 12:40:07,669 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,669 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,670 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22433'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,670 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4579'
2023-10-06 12:40:07,671 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:33279'
2023-10-06 12:40:07,672 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2125'
2023-10-06 12:40:07,672 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7629'
2023-10-06 12:40:07,673 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20133'
2023-10-06 12:40:07,676 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25021'
2023-10-06 12:40:07,676 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14725'
2023-10-06 12:40:07,676 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23393'
2023-10-06 12:40:07,676 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2275'
2023-10-06 12:40:07,679 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10401'
2023-10-06 12:40:07,681 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9335'
2023-10-06 12:40:07,681 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8051'
2023-10-06 12:40:07,682 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24315'
2023-10-06 12:40:07,683 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23521'
2023-10-06 12:40:07,680 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,680 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,685 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4431'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,686 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16393'
2023-10-06 12:40:07,686 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,686 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4865'
2023-10-06 12:40:07,686 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,687 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25303'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,687 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,687 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,688 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21569'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,688 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:33113'
2023-10-06 12:40:07,688 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,688 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,688 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17915'
2023-10-06 12:40:07,689 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18845'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,689 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2539'
2023-10-06 12:40:07,690 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,690 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,690 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21399'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,691 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24587'
2023-10-06 12:40:07,691 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,691 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,692 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21315'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,692 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,692 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,692 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31433'
2023-10-06 12:40:07,692 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13881'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,693 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12949'
2023-10-06 12:40:07,693 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,693 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,693 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17723'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,693 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1627'
2023-10-06 12:40:07,694 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,694 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,694 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3181'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,695 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,695 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,695 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30171'
2023-10-06 12:40:07,695 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23397'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,696 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:21163'
2023-10-06 12:40:07,696 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,696 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,696 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8639'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,697 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,697 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,697 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:24531'
2023-10-06 12:40:07,697 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8043'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,698 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,698 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,698 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23119'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,699 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,699 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7473'
2023-10-06 12:40:07,699 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26605'
2023-10-06 12:40:07,699 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,699 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32957'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,700 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,700 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,700 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9917'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,701 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15439'
2023-10-06 12:40:07,701 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,701 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,701 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28009'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,701 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5869'
2023-10-06 12:40:07,702 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,702 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,702 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13855'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,703 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,703 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,703 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18019'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,704 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,704 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,704 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22411'
2023-10-06 12:40:07,704 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11677'
2023-10-06 12:40:07,704 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6475'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,705 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19231'
2023-10-06 12:40:07,705 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,705 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,705 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8243'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,705 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,705 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,706 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1959'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,706 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,706 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,707 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:33279'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,707 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4529'
2023-10-06 12:40:07,707 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,707 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,707 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20133'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,708 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11877'
2023-10-06 12:40:07,708 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26569'
2023-10-06 12:40:07,708 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,708 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,709 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2275'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,712 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29505'
2023-10-06 12:40:07,713 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16627'
2023-10-06 12:40:07,714 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13413'
2023-10-06 12:40:07,716 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:19819'
2023-10-06 12:40:07,716 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:4059'
2023-10-06 12:40:07,720 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17959'
2023-10-06 12:40:07,718 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,718 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,723 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28011'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,720 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,720 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,723 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:25927'
2023-10-06 12:40:07,723 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25415'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,723 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,723 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,724 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,724 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,724 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12569'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,724 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16861'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,725 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,725 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,725 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,725 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,725 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28897'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,725 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2987'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,725 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,725 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,726 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,726 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16741'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,726 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,726 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29411'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,726 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16203'
2023-10-06 12:40:07,726 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,726 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,727 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,727 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14187'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,727 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,727 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17665'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,727 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,727 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,728 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,728 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13711'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,728 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,728 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14987'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,728 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,728 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,729 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,729 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16277'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,729 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,729 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31103'
2023-10-06 12:40:07,729 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14167'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,729 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,729 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,730 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,730 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17457'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,730 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,730 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5595'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,730 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,730 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,731 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32847'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,731 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,731 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,731 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22111'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,731 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,731 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,732 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23657'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,732 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,732 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,732 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15147'
2023-10-06 12:40:07,732 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,732 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20823'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,732 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,732 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19721'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,733 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,733 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,733 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,733 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,733 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20089'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,733 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19161'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,734 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,734 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,734 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,734 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,734 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2125'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,734 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2717'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,734 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,734 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,735 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23393'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,735 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,735 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,735 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6985'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,735 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,735 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,736 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8051'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,736 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,736 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,736 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,736 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24189'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,736 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,737 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4865'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,737 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,737 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,737 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,737 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,737 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7629'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,737 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2539'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,738 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,738 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,738 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,738 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,738 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1627'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,738 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14725'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,738 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,738 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,739 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,739 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24531'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,739 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,739 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24315'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,739 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,739 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,740 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15439'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,740 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,740 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,740 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17915'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,740 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,740 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,741 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22411'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,741 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,741 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,741 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,741 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31433'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,741 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,741 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4529'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,741 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,741 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,742 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,742 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30171'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,742 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,742 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13413'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,742 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,742 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,743 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7473'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,743 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,743 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,743 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19819'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,743 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,743 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,737 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,744 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11677'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,737 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,744 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,744 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,744 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24351'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,744 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26569'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,745 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,745 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,746 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29505'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,746 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,746 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,747 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11421'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,748 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,748 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,750 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12567'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,750 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,750 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,752 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4579'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,753 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,753 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,754 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25021'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,755 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,755 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,756 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10401'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,756 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1113'
2023-10-06 12:40:07,757 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,757 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,758 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9335'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,759 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,759 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,760 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14325'
2023-10-06 12:40:07,760 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23521'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,761 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,761 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,762 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16393'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,762 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,763 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30583'
2023-10-06 12:40:07,762 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,763 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:33113'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,764 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,764 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,765 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:24587'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,765 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9783'
2023-10-06 12:40:07,765 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,765 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,767 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12949'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,767 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,767 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,768 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:21163'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,769 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1243'
2023-10-06 12:40:07,769 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,769 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,770 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26605'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,770 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,770 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,771 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23969'
2023-10-06 12:40:07,771 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5869'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,772 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,772 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,773 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:19231'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,773 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,773 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,774 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11877'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,774 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,774 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,775 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16627'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,775 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11803'
2023-10-06 12:40:07,775 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,775 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,776 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:4059'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,777 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,777 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,778 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17959'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,778 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,778 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,779 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29249'
2023-10-06 12:40:07,779 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:25927'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,779 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,779 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,780 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16203'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,781 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29141'
2023-10-06 12:40:07,781 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23347'
2023-10-06 12:40:07,780 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,780 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,781 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31103'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,782 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,782 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,783 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15147'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,784 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14753'
2023-10-06 12:40:07,785 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12951'
2023-10-06 12:40:07,788 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6237'
2023-10-06 12:40:07,789 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5475'
2023-10-06 12:40:07,790 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:30609'
2023-10-06 12:40:07,794 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29897'
2023-10-06 12:40:07,794 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32813'
2023-10-06 12:40:07,798 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:33183'
2023-10-06 12:40:07,799 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22517'
2023-10-06 12:40:07,800 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12799'
2023-10-06 12:40:07,803 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:3179'
2023-10-06 12:40:07,804 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7821'
2023-10-06 12:40:07,805 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17703'
2023-10-06 12:40:07,807 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12783'
2023-10-06 12:40:07,808 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:7845'
2023-10-06 12:40:07,808 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20121'
2023-10-06 12:40:07,811 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13601'
2023-10-06 12:40:07,811 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6931'
2023-10-06 12:40:07,812 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8293'
2023-10-06 12:40:07,814 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10155'
2023-10-06 12:40:07,814 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2199'
2023-10-06 12:40:07,816 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:31675'
2023-10-06 12:40:07,817 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1143'
2023-10-06 12:40:07,820 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2563'
2023-10-06 12:40:07,820 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8855'
2023-10-06 12:40:07,821 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9873'
2023-10-06 12:40:07,823 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:1711'
2023-10-06 12:40:07,823 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6373'
2023-10-06 12:40:07,825 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26541'
2023-10-06 12:40:07,826 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13327'
2023-10-06 12:40:07,826 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16927'
2023-10-06 12:40:07,829 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5039'
2023-10-06 12:40:07,829 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:5619'
2023-10-06 12:40:07,830 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8131'
2023-10-06 12:40:07,832 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27701'
2023-10-06 12:40:07,834 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:12879'
2023-10-06 12:40:07,834 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:26565'
2023-10-06 12:40:07,836 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18443'
2023-10-06 12:40:07,838 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11805'
2023-10-06 12:40:07,838 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9697'
2023-10-06 12:40:07,841 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:13927'
2023-10-06 12:40:07,842 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:27375'
2023-10-06 12:40:07,842 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:23427'
2023-10-06 12:40:07,846 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17671'
2023-10-06 12:40:07,847 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18855'
2023-10-06 12:40:07,845 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,845 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,850 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1113'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,850 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2523'
2023-10-06 12:40:07,851 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,851 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,851 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14325'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,852 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,852 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,853 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30583'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,852 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:28197'
2023-10-06 12:40:07,853 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:11791'
2023-10-06 12:40:07,853 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,853 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,854 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9783'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,854 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,854 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,855 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1243'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,856 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,856 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,856 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23969'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,857 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:14841'
2023-10-06 12:40:07,857 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,857 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,858 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11803'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,858 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:9875'
2023-10-06 12:40:07,858 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,858 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,859 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29249'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,859 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,859 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,860 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29141'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,860 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:6735'
2023-10-06 12:40:07,860 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,860 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,861 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14753'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,861 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:29831'
2023-10-06 12:40:07,862 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,862 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,862 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5475'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,862 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,862 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,863 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29897'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,863 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:2271'
2023-10-06 12:40:07,863 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,863 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,864 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22517'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,864 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,864 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,865 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7821'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,865 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:15895'
2023-10-06 12:40:07,865 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,865 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,866 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20121'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,866 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,866 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,867 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8293'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,867 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,867 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,868 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:31675'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,868 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,868 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,869 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2563'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,869 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:20123'
2023-10-06 12:40:07,869 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,869 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,870 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1711'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,870 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,870 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,871 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16927'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,871 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,871 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,872 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5619'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,867 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,867 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,872 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,872 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,872 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23347'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,873 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12879'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,873 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:8095'
2023-10-06 12:40:07,873 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,873 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,873 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,873 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,874 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11805'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,874 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12951'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,874 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,874 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,874 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,874 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,875 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13927'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,875 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6237'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,875 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,875 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,876 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:10227'
2023-10-06 12:40:07,876 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:30609'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,877 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,877 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,877 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32813'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,878 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,878 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,878 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:33183'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,879 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,879 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,879 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:32175'
2023-10-06 12:40:07,879 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12799'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,880 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,880 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,880 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:3179'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,881 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,881 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,881 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17703'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,882 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,882 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,882 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:7845'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,882 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:22117'
2023-10-06 12:40:07,882 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,882 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,883 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13601'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,883 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,883 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,884 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2199'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,884 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,884 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,885 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8855'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,885 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,886 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:18545'
2023-10-06 12:40:07,885 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,886 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26541'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,886 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,886 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,887 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8131'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,887 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,887 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,888 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:26565'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,888 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,888 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,889 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:17441'
2023-10-06 12:40:07,889 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9697'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,889 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,889 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,890 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:23427'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,890 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,890 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,890 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17671'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,891 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,891 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,891 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2523'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,892 distributed.nanny:INFO:        Start Nanny at: 'tcp://127.0.0.1:16493'
2023-10-06 12:40:07,891 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,891 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,892 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:11791'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,892 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,892 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,893 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:14841'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,893 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,893 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,894 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6735'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,894 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,894 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,895 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:2271'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,895 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,895 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,903 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:12783'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,904 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,904 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,905 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6931'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,906 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,906 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,907 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10155'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,908 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,908 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,909 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:1143'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,910 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,910 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,912 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9873'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,912 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,912 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,914 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:6373'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,914 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,914 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,915 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:13327'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,916 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,916 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,917 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:5039'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,918 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,918 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,919 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27701'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,919 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,919 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,920 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18443'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,921 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,921 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,922 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:27375'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,922 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,922 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,923 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18855'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,924 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,924 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,925 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:28197'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,925 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,925 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,926 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:9875'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,927 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,927 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,928 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:29831'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,928 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,928 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,929 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:15895'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,930 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,930 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,930 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:20123'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,931 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,931 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,932 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:8095'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,932 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,932 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,933 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:10227'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,933 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,933 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,934 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:32175'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,935 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,935 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,935 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:22117'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,936 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,936 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,937 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:18545'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,937 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,937 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,938 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:17441'. Reason: nanny-instantiate-failed
2023-10-06 12:40:07,939 - distributed.nanny - ERROR - Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,939 distributed.nanny:ERROR:Failed to start process
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 442, in instantiate
    result = await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/nanny.py", line 711, in start
    await self.process.start()
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 55, in _call_and_set_future
    res = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/process.py", line 215, in _start
    process.start()
  File "/usr/local/lib/python3.10/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/usr/local/lib/python3.10/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/usr/local/lib/python3.10/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
2023-10-06 12:40:07,939 distributed.nanny:INFO:Closing Nanny at 'tcp://127.0.0.1:16493'. Reason: nanny-instantiate-failed
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "<string>", line 1, in <module>
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "<string>", line 1, in <module>
Traceback (most recent call last):
  File "<string>", line 1, in <module>
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
Traceback (most recent call last):
  File "<string>", line 1, in <module>
Traceback (most recent call last):
  File "<string>", line 1, in <module>
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
  File "<string>", line 1, in <module>
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "<string>", line 1, in <module>
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "<string>", line 1, in <module>
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
Traceback (most recent call last):
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
Traceback (most recent call last):
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
    exitcode = _main(fd, parent_sentinel)
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "<string>", line 1, in <module>
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "<string>", line 1, in <module>
    exitcode = _main(fd, parent_sentinel)
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
    exitcode = _main(fd, parent_sentinel)
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "<string>", line 1, in <module>
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
    prepare(preparation_data)
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    prepare(preparation_data)
    prepare(preparation_data)
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
    _fixup_main_from_path(data['init_main_from_path'])
    Output = dask_run(
    exitcode = _main(fd, parent_sentinel)
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
    exitcode = _main(fd, parent_sentinel)
    _fixup_main_from_path(data['init_main_from_path'])
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    exitcode = _main(fd, parent_sentinel)
    prepare(preparation_data)
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    main_content = runpy.run_path(main_path,
    _fixup_main_from_path(data['init_main_from_path'])
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 116, in spawn_main
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    prepare(preparation_data)
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    main_content = runpy.run_path(main_path,
    _fixup_main_from_path(data['init_main_from_path'])
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    _fixup_main_from_path(data['init_main_from_path'])
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    _fixup_main_from_path(data['init_main_from_path'])
    _fixup_main_from_path(data['init_main_from_path'])
    _fixup_main_from_path(data['init_main_from_path'])
    _fixup_main_from_path(data['init_main_from_path'])
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    prepare(preparation_data)
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    main_content = runpy.run_path(main_path,
    _fixup_main_from_path(data['init_main_from_path'])
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    _run_code(code, mod_globals, init_globals,
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    _fixup_main_from_path(data['init_main_from_path'])
    _fixup_main_from_path(data['init_main_from_path'])
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
    return _run_module_code(code, init_globals, run_name,
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    _fixup_main_from_path(data['init_main_from_path'])
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    exec(code, run_globals)
    exec(code, run_globals)
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    main_content = runpy.run_path(main_path,
    return _run_module_code(code, init_globals, run_name,
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    _fixup_main_from_path(data['init_main_from_path'])
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    Output = dask_run(
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    _run_code(code, mod_globals, init_globals,
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    prepare(preparation_data)
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    _fixup_main_from_path(data['init_main_from_path'])
    main_content = runpy.run_path(main_path,
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    exec(code, run_globals)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    exec(code, run_globals)
    _fixup_main_from_path(data['init_main_from_path'])
    main_content = runpy.run_path(main_path,
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    Output = dask_run(
    prepare(preparation_data)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    main_content = runpy.run_path(main_path,
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    Output = dask_run(
    main_content = runpy.run_path(main_path,
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    exec(code, run_globals)
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    main_content = runpy.run_path(main_path,
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    _run_code(code, mod_globals, init_globals,
    _fixup_main_from_path(data['init_main_from_path'])
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    Output = dask_run(
    exec(code, run_globals)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    _run_code(code, mod_globals, init_globals,
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    return _run_module_code(code, init_globals, run_name,
    return _run_module_code(code, init_globals, run_name,
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    prepare(preparation_data)
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    exec(code, run_globals)
    return _run_module_code(code, init_globals, run_name,
    self._preprocess_fileset(fileset)
    exitcode = _main(fd, parent_sentinel)
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    _fixup_main_from_path(data['init_main_from_path'])
    wrapped_out = self.run(fileset, processor_instance, treename)
    exitcode = _main(fd, parent_sentinel)
    _fixup_main_from_path(data['init_main_from_path'])
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    wrapped_out = self.run(fileset, processor_instance, treename)
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    main_content = runpy.run_path(main_path,
    return _run_module_code(code, init_globals, run_name,
    prepare(preparation_data)
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    return _run_module_code(code, init_globals, run_name,
    exec(code, run_globals)
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    _run_code(code, mod_globals, init_globals,
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    Output = dask_run(
    chunks = self.preprocess(fileset, treename)
    exec(code, run_globals)
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    self._preprocess_fileset(fileset)
    exec(code, run_globals)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    chunks = self.preprocess(fileset, treename)
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    exec(code, run_globals)
    return _run_module_code(code, init_globals, run_name,
    _run_code(code, mod_globals, init_globals,
    chunks = self.preprocess(fileset, treename)
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    Output = dask_run(
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
    _run_code(code, mod_globals, init_globals,
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    self.client = Client(threads_per_worker=1)
    Output = dask_run(
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 125, in _main
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    _run_code(code, mod_globals, init_globals,
    _run_code(code, mod_globals, init_globals,
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    exec(code, run_globals)
    exec(code, run_globals)
    exec(code, run_globals)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    exec(code, run_globals)
    self.start(timeout=timeout)
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    self._preprocess_fileset(fileset)
    wrapped_out = self.run(fileset, processor_instance, treename)
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    wrapped_out = self.run(fileset, processor_instance, treename)
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    self._preprocess_fileset(fileset)
    prepare(preparation_data)
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    self._preprocess_fileset(fileset)
    _run_code(code, mod_globals, init_globals,
    _run_code(code, mod_globals, init_globals,
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 236, in prepare
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    exec(code, run_globals)
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    chunks = self.preprocess(fileset, treename)
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    wrapped_out = self.run(fileset, processor_instance, treename)
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    exec(code, run_globals)
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    _fixup_main_from_path(data['init_main_from_path'])
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    _fixup_main_from_path(data['init_main_from_path'])
  File "/usr/local/lib/python3.10/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    Output = dask_run(
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    self.client = Client(threads_per_worker=1)
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    self._preprocess_fileset(fileset)
    exec(code, run_globals)
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    chunks = self.preprocess(fileset, treename)
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    _run_code(code, mod_globals, init_globals,
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    Output = dask_run(
    main_content = runpy.run_path(main_path,
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
    self.client = Client(threads_per_worker=1)
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    exec(code, run_globals)
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    exec(code, run_globals)
    return _run_module_code(code, init_globals, run_name,
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    wrapped_out = self.run(fileset, processor_instance, treename)
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    Output = dask_run(
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    self._preprocess_fileset(fileset)
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    self.start(timeout=timeout)
    _run_code(code, mod_globals, init_globals,
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    out, _ = pre_executor(to_get, closure, out)
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    exec(code, run_globals)
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    self.client = Client(threads_per_worker=1)
    wait(10)
    Output = dask_run(
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    sync(self.loop, self._start, **kwargs)
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    wrapped_out = self.run(fileset, processor_instance, treename)
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    self._preprocess_fileset(fileset)
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    main_content = runpy.run_path(main_path,
    chunks = self.preprocess(fileset, treename)
    chunks = self.preprocess(fileset, treename)
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/runpy.py", line 289, in run_path
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    return e.wait(timeout)
    chunks = self.preprocess(fileset, treename)
    Output = dask_run(
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    out, _ = pre_executor(to_get, closure, out)
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    return _run_module_code(code, init_globals, run_name,
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/runpy.py", line 96, in _run_module_code
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    out, _ = pre_executor(to_get, closure, out)
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    self.client = Client(threads_per_worker=1)
    chunks = self.preprocess(fileset, treename)
    self.client = Client(threads_per_worker=1)
    wrapped_out = self.run(fileset, processor_instance, treename)
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    self._preprocess_fileset(fileset)
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    return e.wait(timeout)
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    Output = dask_run(
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    self.client = Client(threads_per_worker=1)
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    gotit = waiter.acquire(True, timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    gotit = waiter.acquire(True, timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
KeyboardInterrupt
    _run_code(code, mod_globals, init_globals,
    self.client = Client(threads_per_worker=1)
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/runpy.py", line 86, in _run_code
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    sync(self.loop, self._start, **kwargs)
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    return e.wait(timeout)
KeyboardInterrupt
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    chunks = self.preprocess(fileset, treename)
    chunks = self.preprocess(fileset, treename)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    out, _ = pre_executor(to_get, closure, out)
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    wrapped_out = self.run(fileset, processor_instance, treename)
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    self.start(timeout=timeout)
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    sync(self.loop, self._start, **kwargs)
    chunks = self.preprocess(fileset, treename)
    gotit = waiter.acquire(True, timeout)
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    self._preprocess_fileset(fileset)
    out, _ = pre_executor(to_get, closure, out)
KeyboardInterrupt
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    sync(self.loop, self._start, **kwargs)
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    sync(self.loop, self._start, **kwargs)
    out, _ = pre_executor(to_get, closure, out)
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    out, _ = pre_executor(to_get, closure, out)
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
    out, _ = pre_executor(to_get, closure, out)
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    return e.wait(timeout)
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    out, _ = pre_executor(to_get, closure, out)
    exec(code, run_globals)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    return e.wait(timeout)
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
  File "/srv/Kinematics/kinematics.py", line 184, in <module>
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    return e.wait(timeout)
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    out, _ = pre_executor(to_get, closure, out)
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
2023-10-06 12:40:20,390 distributed.scheduler:INFO:Scheduler closing...
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    signaled = self._cond.wait(timeout)
    self.client = Client(threads_per_worker=1)
    Output = dask_run(
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    self.start(timeout=timeout)
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1700, in __call__
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    wait(10)
    signaled = self._cond.wait(timeout)
    self.client = Client(threads_per_worker=1)
    self._preprocess_fileset(fileset)
    self.start(timeout=timeout)
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    gotit = waiter.acquire(True, timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
KeyboardInterrupt
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    chunks = self.preprocess(fileset, treename)
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    sync(self.loop, self._start, **kwargs)
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    gotit = waiter.acquire(True, timeout)
    sync(self.loop, self._start, **kwargs)
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
2023-10-06 12:40:20,391 distributed.scheduler:INFO:Scheduler closing...
KeyboardInterrupt
2023-10-06 12:40:20,392 distributed.scheduler:INFO:Scheduler closing all comms
    return e.wait(timeout)
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    wait(10)
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    self.start(timeout=timeout)
    gotit = waiter.acquire(True, timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
KeyboardInterrupt
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    sync(self.loop, self._start, **kwargs)
    wrapped_out = self.run(fileset, processor_instance, treename)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1782, in run
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    return e.wait(timeout)
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
2023-10-06 12:40:20,393 distributed.scheduler:INFO:Scheduler closing...
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    sync(self.loop, self._start, **kwargs)
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
2023-10-06 12:40:20,394 distributed.scheduler:INFO:Scheduler closing all comms
    wait(10)
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    wait(10)
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    wait(10)
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
2023-10-06 12:40:20,395 distributed.scheduler:INFO:Scheduler closing...
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    self.start(timeout=timeout)
    return e.wait(timeout)
    return e.wait(timeout)
    wait(10)
    gotit = waiter.acquire(True, timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    out, _ = pre_executor(to_get, closure, out)
    chunks = self.preprocess(fileset, treename)
KeyboardInterrupt
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1734, in preprocess
2023-10-06 12:40:20,395 distributed.scheduler:INFO:Scheduler closing...
    return e.wait(timeout)
    gotit = waiter.acquire(True, timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
2023-10-06 12:40:20,396 distributed.scheduler:INFO:Scheduler closing...
KeyboardInterrupt
    gotit = waiter.acquire(True, timeout)
    signaled = self._cond.wait(timeout)
KeyboardInterrupt
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    signaled = self._cond.wait(timeout)
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    signaled = self._cond.wait(timeout)
2023-10-06 12:40:20,396 distributed.scheduler:INFO:Scheduler closing all comms
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    gotit = waiter.acquire(True, timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
    self.client = Client(threads_per_worker=1)
2023-10-06 12:40:20,397 distributed.scheduler:INFO:Scheduler closing all comms
KeyboardInterrupt
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    signaled = self._cond.wait(timeout)
    self._preprocess_fileset(fileset)
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
2023-10-06 12:40:20,397 distributed.scheduler:INFO:Scheduler closing all comms
    self.client = Client(threads_per_worker=1)
2023-10-06 12:40:20,397 distributed.scheduler:INFO:Scheduler closing all comms
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
2023-10-06 12:40:20,398 distributed.scheduler:INFO:Scheduler closing...
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    wait(10)
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    gotit = waiter.acquire(True, timeout)
    wait(10)
KeyboardInterrupt
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    return e.wait(timeout)
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
2023-10-06 12:40:20,400 distributed.scheduler:INFO:Scheduler closing all comms
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    wait(10)
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
    gotit = waiter.acquire(True, timeout)
    return e.wait(timeout)
    sync(self.loop, self._start, **kwargs)
KeyboardInterrupt
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
2023-10-06 12:40:20,401 distributed.scheduler:INFO:Scheduler closing...
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
    sync(self.loop, self._start, **kwargs)
    wait(10)
    gotit = waiter.acquire(True, timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
KeyboardInterrupt
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    signaled = self._cond.wait(timeout)
2023-10-06 12:40:20,402 distributed.scheduler:INFO:Scheduler closing...
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    wait(10)
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
2023-10-06 12:40:20,402 distributed.scheduler:INFO:Scheduler closing all comms
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
2023-10-06 12:40:20,403 distributed.scheduler:INFO:Scheduler closing...
    gotit = waiter.acquire(True, timeout)
Exception ignored in atexit callback: <function close_clusters at 0x7f009fc42e60>
KeyboardInterrupt
    return e.wait(timeout)
Traceback (most recent call last):
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py", line 695, in close_clusters
2023-10-06 12:40:20,403 distributed.scheduler:INFO:Scheduler closing...
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
2023-10-06 12:40:20,403 distributed.scheduler:INFO:Scheduler closing...
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
2023-10-06 12:40:20,404 distributed.scheduler:INFO:Scheduler closing all comms
    gotit = waiter.acquire(True, timeout)
    signaled = self._cond.wait(timeout)
KeyboardInterrupt
    cluster.close(timeout=10)
2023-10-06 12:40:20,404 distributed.scheduler:INFO:Scheduler closing all comms
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
  File "/usr/local/lib/python3.10/site-packages/distributed/deploy/cluster.py", line 217, in close
2023-10-06 12:40:20,399 distributed.scheduler:INFO:Scheduler closing...
    gotit = waiter.acquire(True, timeout)
2023-10-06 12:40:20,405 distributed.scheduler:INFO:Scheduler closing all comms
KeyboardInterrupt
    return self.sync(self._close, callback_timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 345, in sync
2023-10-06 12:40:20,405 distributed.scheduler:INFO:Scheduler closing all comms
2023-10-06 12:40:20,405 distributed.scheduler:INFO:Scheduler closing...
    return sync(
    self._preprocess_fileset(fileset)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 412, in sync
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 1461, in _preprocess_fileset
    raise exc.with_traceback(tb)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 385, in f
    result = yield future
  File "/usr/local/lib/python3.10/site-packages/tornado/gen.py", line 767, in run
    sync(self.loop, self._start, **kwargs)
    out, _ = pre_executor(to_get, closure, out)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
2023-10-06 12:40:20,407 distributed.scheduler:INFO:Scheduler closing all comms
  File "/usr/local/lib/python3.10/site-packages/coffea/processor/executor.py", line 883, in __call__
    value = future.result()
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 1812, in wait_for
2023-10-06 12:40:20,407 distributed.scheduler:INFO:Scheduler closing...
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    self.client = Client(threads_per_worker=1)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 991, in __init__
    return await asyncio.wait_for(fut, timeout)
    gotit = waiter.acquire(True, timeout)
  File "/usr/local/lib/python3.10/asyncio/tasks.py", line 445, in wait_for
2023-10-06 12:40:20,409 distributed.scheduler:INFO:Scheduler closing all comms
KeyboardInterrupt
    return fut.result()
  File "/usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py", line 455, in _close
2023-10-06 12:40:20,408 distributed.scheduler:INFO:Scheduler closing...
    self.start(timeout=timeout)
  File "/usr/local/lib/python3.10/site-packages/distributed/client.py", line 1188, in start
    assert w.status in {
AssertionError: Status.init
2023-10-06 12:40:20,410 distributed.scheduler:INFO:Scheduler closing all comms
    sync(self.loop, self._start, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 408, in sync
2023-10-06 12:40:20,412 distributed.scheduler:INFO:Scheduler closing all comms
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
2023-10-06 12:40:20,412 distributed.scheduler:INFO:Scheduler closing...
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
2023-10-06 12:40:20,414 distributed.scheduler:INFO:Scheduler closing...
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
2023-10-06 12:40:20,414 distributed.scheduler:INFO:Scheduler closing...
    wait(10)
  File "/usr/local/lib/python3.10/site-packages/distributed/utils.py", line 397, in wait
2023-10-06 12:40:20,415 distributed.scheduler:INFO:Scheduler closing all comms
2023-10-06 12:40:20,416 distributed.scheduler:INFO:Scheduler closing all comms
    return e.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
2023-10-06 12:40:20,416 distributed.scheduler:INFO:Scheduler closing...
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
2023-10-06 12:40:20,417 distributed.scheduler:INFO:Scheduler closing...
2023-10-06 12:40:20,418 distributed.scheduler:INFO:Scheduler closing all comms
2023-10-06 12:40:20,419 distributed.scheduler:INFO:Scheduler closing all comms
2023-10-06 12:40:20,421 distributed.scheduler:INFO:Scheduler closing...
2023-10-06 12:40:20,423 distributed.scheduler:INFO:Scheduler closing all comms
2023-10-06 12:40:20,423 distributed.scheduler:INFO:Scheduler closing...
2023-10-06 12:40:20,425 distributed.scheduler:INFO:Scheduler closing all comms
2023-10-06 12:40:20,426 distributed.scheduler:INFO:Scheduler closing all comms
    signaled = self._cond.wait(timeout)
  File "/usr/local/lib/python3.10/threading.py", line 324, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
2023-10-06 12:40:20,430 distributed.scheduler:INFO:Scheduler closing...
2023-10-06 12:40:20,433 distributed.scheduler:INFO:Scheduler closing all comms
2023-10-06 12:40:20,436 distributed.scheduler:INFO:Scheduler closing...
2023-10-06 12:40:20,438 distributed.scheduler:INFO:Scheduler closing all comms
2023-10-06 12:40:20,560 - distributed.process - WARNING - [<AsyncProcess Dask Worker process (from Nanny)>] process 3838190 exit status was already read will report exitcode 255
2023-10-06 12:40:20,560 distributed.process:WARNING:[<AsyncProcess Dask Worker process (from Nanny)>] process 3838190 exit status was already read will report exitcode 255
2023-10-06 12:40:20,573 - distributed.process - WARNING - [<AsyncProcess Dask Worker process (from Nanny)>] process 3838242 exit status was already read will report exitcode 255
2023-10-06 12:40:20,573 distributed.process:WARNING:[<AsyncProcess Dask Worker process (from Nanny)>] process 3838242 exit status was already read will report exitcode 255
2023-10-06 12:40:20,574 distributed.process:INFO:reaping stray process <SpawnProcess name='Dask Worker process (from Nanny)' pid=3838195 parent=3838126 started daemon>
2023-10-06 12:40:21,214 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-40' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,214 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-31' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,215 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-41' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,215 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-22' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,215 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-32' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,216 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-42' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,216 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-23' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,216 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-33' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,216 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-43' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,217 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-24' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,217 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-34' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,217 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-44' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,218 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-25' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,218 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-35' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,218 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-26' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,219 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-36' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,219 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-27' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,219 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-37' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,219 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-28' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,220 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-38' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,220 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-29' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,220 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-39' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,221 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-21' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,221 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-30' coro=<_wrap_awaitable() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/spec.py:119> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2023-10-06 12:40:21,221 asyncio:ERROR:Task was destroyed but it is pending!
task: <Task pending name='Task-19' coro=<Cluster._sync_cluster_info() running at /usr/local/lib/python3.10/site-packages/distributed/deploy/cluster.py:179> wait_for=<Future pending cb=[Task.task_wakeup()]>>
/usr/local/lib/python3.10/multiprocessing/resource_tracker.py:224: UserWarning: resource_tracker: There appear to be 1318 leaked semaphore objects to clean up at shutdown
  warnings.warn('resource_tracker: There appear to be %d '
/usr/local/lib/python3.10/multiprocessing/resource_tracker.py:237: UserWarning: resource_tracker: '/mp-p3gbd69g': [Errno 2] No such file or directory
  warnings.warn('resource_tracker: %r: %s' % (name, e))
/usr/local/lib/python3.10/multiprocessing/resource_tracker.py:237: UserWarning: resource_tracker: '/mp-jifon0rg': [Errno 2] No such file or directory
  warnings.warn('resource_tracker: %r: %s' % (name, e))
/usr/local/lib/python3.10/multiprocessing/resource_tracker.py:237: UserWarning: resource_tracker: '/mp-wjjctb86': [Errno 2] No such file or directory
  warnings.warn('resource_tracker: %r: %s' % (name, e))
/usr/local/lib/python3.10/multiprocessing/resource_tracker.py:237: UserWarning: resource_tracker: '/mp-bs013kvv': [Errno 2] No such file or directory
  warnings.warn('resource_tracker: %r: %s' % (name, e))
/usr/local/lib/python3.10/multiprocessing/resource_tracker.py:237: UserWarning: resource_tracker: '/mp-0tr1i8oi': [Errno 2] No such file or directory
  warnings.warn('resource_tracker: %r: %s' % (name, e))
